@page "/"
@using VigilantCity.Core.Extensions
@using VigilantCity.Core.Models
@using VigilantCity.Core.Models.Enumerations
@using VigilantCity.Core.Models.Incidents
@using VigilantCity.Core.Services.Interfaces
@inject ICityLoader cityLoader;
@inject IJSRuntime jsRuntime;
@inject ICityStarter cityStarter;
@inject IIncidentFactory incidentFactory;
@inject NavigationManager Navigation;

<PageTitle>Welcome to Vigilant City</PageTitle>

@if (City != null)
{
    <div class="mb-4 text-center">
        <h3>@City.PlayerCharacter.Alias (@City.PlayerCharacter.Name)</h3>
    </div>

    @if (City.Incidents != null && City.Incidents.Any())
    {
        <div class="row justify-content-center">
            <div class="col-12 col-md-6 text-center">
                <div class="list-group">
                    @foreach (var incident in City.Incidents)
                    {
                        <button class="list-group-item list-group-item-action" @onclick="() => NavigateToIncident(incident.Id)">
                            <table class="w-100 text-center">
                                <tr>
                                    <td style="width:1%; white-space:nowrap;">
                                        <i class="fa-solid fa-stopwatch" aria-hidden="true"></i> @incident.TimeToResolve
                                    </td>
                                    <td class="ps-3">
                                        @($"{incident.Type} in {incident.District.GetDisplayName()}")
                                    </td>
                                </tr>
                            </table>
                        </button>
                    }
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="mb-3 text-center">
            <button class="btn btn-primary" @onclick="PatrolAsync">Patrol</button>
        </div>
    }
}

@code {
    public City? City { get; set; }

    protected override async Task OnInitializedAsync()
    {
        this.City = await cityLoader.LoadCityAsync();

        if (this.City == null)
        {
            Navigation.NavigateTo("/Start");
        }
        else
        {
            await base.OnInitializedAsync();
        }
    }

    private async Task PatrolAsync()
    {
        await incidentFactory.GenerateIncidents(this.City!);
    }

    private void NavigateToIncident(Guid incidentId)
    {
        Navigation.NavigateTo($"/incident/{incidentId}");
    }
}
